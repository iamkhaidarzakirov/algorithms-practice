
def binary_search(data: list[int], item: int) -> any:
    """Функция принимает массив из чисел и пытается найти искомое число; если такое число есть в массиве, возвращает
    его индекс, в противном случае None.

    Первым делом нужно определить входные индексы начала и конца диапазона поиска / по ходу работы они будут меняться"""
    start = 0
    end = len(data) - 1

    while True:
        """Начальный индекс диапазона поиска не может быть больше конечного. Если искомого числа нет в массиве,
         в зависимости от того, искомое число больше или меньше предполагаемого, индекс приобретет
         недопустимое значение: выйдет за рамки диапазона"""
        if start > end:
            break
        # Индекс середины диапазона на данный момент / деление возвращает float, поэтому округляем
        mid = int((start + end) / 2)
        guess = data[mid]  # Выдвигаем предположение
        if guess == item:
            # Если предположение совпало с загаданным числом, возвращаем индекс совпадения и завершаем работу функции
            return mid
        # Если угадать не получилось, то меняем одну из границ диапазона
        elif guess > item:
            """ Предположение оказалось больше искомого числа, значит откидываем все что больше предполагаемого числа
            и само число / устанавливаем новую границу диапазона"""
            end = mid - 1
        else:
            """Предположение оказалось меньше искомого числа, значит откидываем все что меньше предполагаемого числа
            и само число / устанавливаем новую границу диапазона"""
            start = mid + 1
    return None


if __name__ == '__main__':
    n = [4, 8, 15, 16, 23, 42]
    print(binary_search(data=n, item=15))
